{"version":3,"sources":["components/layout/Header.js","Context.js","components/contact/Contact.js","components/contact/Contacts.js","components/layout/TextInputGroup.js","components/contact/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/contact/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","item","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","Axios","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","_onClick","_onDelete","url","method","status","t0","_this2","_this2$props$contact","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","Fragment","Contact_Contact","TextInputGroup","_ref","placeholder","onChange","error","htmlFor","classnames","is-invalid","propsType","PropTypes","string","isRequired","func","AddContact","nameErr","emailErr","phoneErr","_onChange","e","defineProperty","target","_onSubmit","_this$state","preventDefault","phoneInput","current","abrupt","history","push","_x","_x2","createRef","_this$state2","onSubmit","layout_TextInputGroup","defaultValue","ref","About","NotFound","EditContact","match","params","App","Context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ebd0d8ff.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"Contact Manager\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => {\n          return contact.id !== action.payload.id;\n        })\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload.contact]\n      };\n    case \"UPDATE_CONTACT\":\n      const { contact } = action.payload;\n      return {\n        ...state,\n        contacts: state.contacts.map(item => {\n          return item.id === contact.id ? contact : item;\n        })\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action =>\n      this.setState(state => {\n        return reducer(state, action);\n      })\n  };\n\n  async componentDidMount() {\n    const res = await Axios(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({\n      contacts: res.data\n    });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../Context\";\nimport Axios from \"axios\";\nimport {Link} from 'react-router-dom'\nexport default class Contact extends Component {\n  static propTypes = {\n    contact: PropTypes.object.isRequired\n  };\n\n  state = {\n    showContactInfo: false\n  };\n\n  _onClick = () => {\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    });\n  };\n\n  _onDelete = async (id, dispatch) => {\n    try {\n      const res = await Axios({\n        url: `https://jsonplaceholder.typicode.com/users/${id}`,\n        method: \"delete\"\n      });\n\n      if (res.status === 200)\n        dispatch({\n          type: \"DELETE_CONTACT\",\n          payload: {\n            id: id\n          }\n        });\n    } catch (error) {\n      dispatch({\n        type: \"DELETE_CONTACT\",\n        payload: {\n          id: id\n        }\n      });\n    }\n  };\n\n  render() {\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { id, name, email, phone } = this.props.contact;\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={this._onClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this._onDelete.bind(this, id, dispatch)}\n                />\n                <Link to={`/contact/edit/${id}`}>\n                <i\n                  className=\"fas fa-pencil-alt\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"black\", marginRight: '1rem' }}\n                  \n                />\n                </Link>\n                \n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../Context\";\n\nexport default class Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact List</span>{\" \"}\n              </h1>\n\n              {contacts.map(contact => {\n                return <Contact key={contact.id} contact={contact} />;\n              })}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from 'classnames'\nconst TextInputGroup = ({ name, placeholder, value, onChange, error }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"name\">{name}</label>\n      <input\n        type=\"text\"\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        className={classnames('form-control form-control-lg', {\n          \"is-invalid\": error\n        })}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propsType = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\n//import uuid from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport Axios from 'axios'\n\nexport default class AddContact extends Component {\n  constructor(props) {\n    super(props);\n    this.phoneInput = React.createRef();\n  }\n\n  state = {\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n\n    nameErr: \"\",\n    emailErr: \"\",\n    phoneErr: \"\"\n  };\n\n  _onChange = e =>\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n  _onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    this.setState({\n      phone: this.phoneInput.current.value\n    });\n\n    let { name, phone, email } = this.state;\n\n    phone = this.phoneInput.current.value;\n\n    //Check errors\n    if (name === \"\" || email === \"\" || phone === \"\") {\n      this.setState({\n        nameErr: name === \"\" ? \"name is required\" : \"\",\n        emailErr: email === \"\" ? \"email is required\" : \"\",\n        phoneErr: phone === \"\" ? \"phone is required\" : \"\"\n      });\n      return;\n    }\n\n    const contact = {\n      name,\n      phone,\n      email\n    };\n\n    const res = await Axios({\n      method: 'post',\n      url: 'https://jsonplaceholder.typicode.com/users',\n      data: contact\n    })\n\n    if(res.status === 201)\n      dispatch({\n        type: \"ADD_CONTACT\",\n        payload: {\n          contact: res.data\n        }\n      });\n\n    this.setState({\n      name: \"\",\n      phone: \"\",\n      email: \"\",\n      nameErr: \"\",\n      emailErr: \"\",\n      phoneErr: \"\"\n    });\n\n    this.phoneInput.current.value = \"\";\n\n    this.props.history.push(\"/\");\n  };\n\n  static defaultProps = {\n    phone: \"999-999-9999\"\n  };\n\n  render() {\n    const { name, email, nameErr, emailErr, phoneErr } = this.state;\n    const { phone } = this.props;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this._onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    name=\"name\"\n                    placeholder=\"Enter name ...\"\n                    value={name}\n                    onChange={this._onChange}\n                    error={nameErr}\n                  />\n                  <TextInputGroup\n                    name=\"email\"\n                    placeholder=\"Enter email ...\"\n                    value={email}\n                    onChange={this._onChange}\n                    error={emailErr}\n                  />\n                  <div className=\"form-group\">\n                    <label htmlFor=\"phone\">Phone</label>\n                    <input\n                      type=\"text\"\n                      name=\"phone\"\n                      placeholder=\"Enter phone ...\"\n                      defaultValue={phone}\n                      className={`${\n                        phoneErr !== \"\" ? \"is-invalid\" : null\n                      } form-control form-control-lg`}\n                      ref={this.phoneInput}\n                    />\n                    {phoneErr && (\n                      <div className=\"invalid-feedback\">{phoneErr}</div>\n                    )}\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from 'react'\n\nconst About = (props) => {\n  return (\n    <div>\n        {/* {props.match.params.name} - {props.match.params.id} */}\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple App to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n\nexport default About\n","import React from 'react'\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404 Page Not Found</span></h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  )\n}\n\nexport default NotFound\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\n//mport uuid from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport Axios from \"axios\";\n\nexport default class EditContact extends Component {\n  state = {\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n\n    nameErr: \"\",\n    emailErr: \"\",\n    phoneErr: \"\"\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await Axios({\n      method: \"get\",\n      url: `https://jsonplaceholder.typicode.com/users/${id}`\n    });\n    const { name, phone, email } = res.data;\n    this.setState({\n      name: name,\n      phone: phone,\n      email: email\n    });\n  }\n\n  _onChange = e =>\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n  _onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    let { name, phone, email } = this.state;\n    const { id } = this.props.match.params;\n\n    //Check errors\n    if (name === \"\" || email === \"\" || phone === \"\") {\n      this.setState({\n        nameErr: name === \"\" ? \"name is required\" : \"\",\n        emailErr: email === \"\" ? \"email is required\" : \"\",\n        phoneErr: phone === \"\" ? \"phone is required\" : \"\"\n      });\n      return;\n    }\n\n    const contact = {\n      id: id,\n      name,\n      phone,\n      email\n    };\n\n    const res = await Axios({\n      method: \"put\",\n      url: `https://jsonplaceholder.typicode.com/users/${id}`,\n      data: contact\n    });\n\n    if (res.status === 200)\n      dispatch({\n        type: \"UPDATE_CONTACT\",\n        payload: {\n          contact: res.data\n        }\n      });\n\n    this.setState({\n      name: \"\",\n      phone: \"\",\n      email: \"\",\n      nameErr: \"\",\n      emailErr: \"\",\n      phoneErr: \"\"\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, nameErr, emailErr, phoneErr } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Update Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this._onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    name=\"name\"\n                    placeholder=\"Enter name ...\"\n                    value={name}\n                    onChange={this._onChange}\n                    error={nameErr}\n                  />\n                  <TextInputGroup\n                    name=\"email\"\n                    placeholder=\"Enter email ...\"\n                    value={email}\n                    onChange={this._onChange}\n                    error={emailErr}\n                  />\n                  <TextInputGroup\n                    name=\"phone\"\n                    placeholder=\"Enter phone ...\"\n                    value={phone}\n                    onChange={this._onChange}\n                    error={phoneErr}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Contacts from \"./components/contact/Contacts\";\nimport { Provider } from \"./Context\";\nimport AddContact from \"./components/contact/AddContact\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport EditContact from \"./components/contact/EditContact\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                {/* <Route exact path=\"/about/:name/:id\" component={About} /> */}\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}